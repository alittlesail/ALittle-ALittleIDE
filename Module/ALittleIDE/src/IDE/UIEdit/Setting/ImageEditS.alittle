
namespace ALittleIDE;

public class ImageEditS : TextEditS
{
    private ALittle.DisplayObject _show_up;
    private ALittle.DisplayObject _show_up_grid9;
    private ALittle.DisplayObject _show_over;
    private ALittle.DisplayObject _show_over_grid9;
    private ALittle.DisplayObject _show_disabled;
    private ALittle.DisplayObject _show_disabled_grid9;
    private ALittle.DisplayObject _show_down;
    private ALittle.DisplayObject _show_down_grid9;

    public ctor(IDEUITreeUserInfo user_info, IDEUITabChild tab_child, IDEUITreeLogic tree_logic)
    {
        // 设置面板的UI
        this._layer_name = "ide_setting_imageedit";
    }
    
    public fun LoadNatureBase()
    {
        TextEditS.LoadNatureBase(this);
        this.LoadValueData("margin_left");
        this.LoadValueData("margin_right");
        this.LoadValueData("margin_top");
        this.LoadValueData("margin_bottom");
        this.LoadValueData("ims_padding");
        this.LoadShowTypeDataForImage("show_up");
        this.LoadShowTypeDataForImage("show_over");
        this.LoadShowTypeDataForImage("show_down");
        this.LoadShowTypeDataForImage("show_disabled");
    }
    //margin_left
    public fun HandleMarginLeftFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("margin_left", false);
    }
    //margin_right
    public fun HandleMarginRightFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("margin_right", false);
    }
    //margin_top
    public fun HandleMarginTopFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("margin_top", false);
    }
    //margin_bottom
    public fun HandleMarginBottomFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("margin_bottom", false);
    }
    public fun HandleImsPaddingFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("ims_padding", false);
    }
    //show_up
    public fun HandleShowUpFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_up", this._show_up.text, this._show_up_grid9.selected, false);
    }
    public async fun HandleShowUpSelect(ALittle.UIEvent event)
    {
        var ui_manager = g_IDEProject.GetUIManager(this._tree_logic.user_info.module);
        if (ui_manager == null)
        {
            g_AUITool.ShowNotice("错误", "模块不存在:"..this._tree_logic.user_info.module);
            return;
        }

		g_IDEImageSelectDialog.SetBasePath(ui_manager.texture_path);
		var path = g_IDEImageSelectDialog.ShowSelect();
		if (path == null) return;
		this.ImagePathSelectCallback("show_up", this.HandleShowUpFOCUSOUT, null, path, true);
    }
    //show_over
    public fun HandleShowOverFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_over", this._show_over.text, this._show_over_grid9.selected, false);
    }
    public async fun HandleShowOverSelect(ALittle.UIEvent event)
    {
        var ui_manager = g_IDEProject.GetUIManager(this._tree_logic.user_info.module);
        if (ui_manager == null)
        {
            g_AUITool.ShowNotice("错误", "模块不存在:"..this._tree_logic.user_info.module);
            return;
        }

		g_IDEImageSelectDialog.SetBasePath(ui_manager.texture_path);
		var path = g_IDEImageSelectDialog.ShowSelect();
		if (path == null) return;
		this.ImagePathSelectCallback("show_over", this.HandleShowOverFOCUSOUT, null, path, true);
    }
    //show_down
    public fun HandleShowDownFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_down", this._show_down.text, this._show_down_grid9.selected, false);
    }
    public async fun HandleShowDownSelect(ALittle.UIEvent event)
    {
        var ui_manager = g_IDEProject.GetUIManager(this._tree_logic.user_info.module);
        if (ui_manager == null)
        {
            g_AUITool.ShowNotice("错误", "模块不存在:"..this._tree_logic.user_info.module);
            return;
        }

		g_IDEImageSelectDialog.SetBasePath(ui_manager.texture_path);
		var path = g_IDEImageSelectDialog.ShowSelect();
		if (path == null) return;
		this.ImagePathSelectCallback("show_down", this.HandleShowDownFOCUSOUT, null, path, true);
    }
    //show_disabled
    public fun HandleShowDisabledFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_disabled", this._show_disabled.text, this._show_disabled_grid9.selected, false);
    }
    public async fun HandleShowDisabledSelect(ALittle.UIEvent event)
    {
        var ui_manager = g_IDEProject.GetUIManager(this._tree_logic.user_info.module);
        if (ui_manager == null)
        {
            g_AUITool.ShowNotice("错误", "模块不存在:"..this._tree_logic.user_info.module);
            return;
        }

		g_IDEImageSelectDialog.SetBasePath(ui_manager.texture_path);
		var path = g_IDEImageSelectDialog.ShowSelect();
		if (path == null) return;
		this.ImagePathSelectCallback("show_disabled", this.HandleShowDisabledFOCUSOUT, null, path, true);
    }
}