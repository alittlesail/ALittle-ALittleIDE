
namespace ALittleIDE;

public class Grid9S : DisplayLayoutS
{
    private ALittle.DisplayObject _left_size;
    private ALittle.DisplayObject _right_size;
    private ALittle.DisplayObject _top_size;
    private ALittle.DisplayObject _bottom_size;

    public ctor(IDEUITreeUserInfo user_info, IDEUITabChild tab_child, IDEUITreeLogic tree_logic)
    {
        // 设置面板的UI
        this._layer_name = "ide_setting_grid9";
    }
    
    public fun LoadNatureBase()
    {
        DisplayLayoutS.LoadNatureBase(this);

        this.LoadValueData("left_size");
        this.LoadValueData("right_size");
        this.LoadValueData("top_size");
        this.LoadValueData("bottom_size");
    }
    
    public fun HandleGrid9LeftFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("left_size", false);
    }
    
    public fun HandleGrid9RightFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("right_size", false);
    }
    
    public fun HandleGrid9TopFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("top_size", false);
    }
    
    public fun HandleGrid9BottomFOCUSOUT(ALittle.UIEvent event)
    {
        this.ValueNumInputChange("bottom_size", false);
    }
    
    public fun HandleAutoCut(ALittle.UIEvent event)
    {
        var revoke_bind = new ALittle.RevokeBind();
        this._left_size.text = 0;
        this.ValueNumInputChange("left_size", false, revoke_bind);
        this._right_size.text = 0;
        this.ValueNumInputChange("right_size", false, revoke_bind);
        this._top_size.text = 0;
        this.ValueNumInputChange("top_size", false, revoke_bind);
        this._bottom_size.text = 0;
        this.ValueNumInputChange("bottom_size", false, revoke_bind);
        this._tab_child.revoke_list.PushRevoke(revoke_bind);
    }
}