
namespace ALittleIDE;

public class SpringTextButtonS : DisplayLayoutS
{
	private ALittle.DisplayObject _show_up;
	private ALittle.DisplayObject _show_up_grid9;
	private ALittle.DisplayObject _show_disabled;
	private ALittle.DisplayObject _show_disabled_grid9;

	public ctor(IDEUITreeUserInfo user_info, IDEUITabChild tab_child, IDEUITreeLogic tree_logic)
	{
		this._layer_name = "ide_setting_springtextbutton";
	}
	
	public fun LoadNatureBase()
	{
		DisplayLayoutS.LoadNatureBase(this);

		this.LoadValueData("text");
		this.LoadShowTypeDataForImage("show_up");
		this.LoadShowTypeDataForImage("show_disabled");
		this.LoadShowTypeNoNilData("show_text");
		this.LoadShowTypeNoNilData("show_disabled_text");
	
		this.LoadBoolData("file_select", false, g_IDEEnum.yn_type);
	}
	
	public fun HandleMTextFOCUSOUT(ALittle.UIEvent event)
	{
		this.DefaultNoStringInputChange("text", false);
	}
	
	public fun HandleShowUpFOCUSOUT(ALittle.UIEvent event)
	{
		if (event.target._user_data != null)
		{
			if (event.target._user_data == event.target.text) return;
			event.target._user_data = event.target.text;
		}
		this.RemoverToNilShowSetForImage("show_up", this._show_up.text, this._show_up_grid9.selected, false);
	}
	public async fun HandleShowUpSelect(ALittle.UIEvent event)
	{
        var ui_manager = g_IDEProject.GetUIManager(this._tree_logic.user_info.module);
        if (ui_manager == null)
        {
            g_AUITool.ShowNotice("错误", "模块不存在:"..this._tree_logic.user_info.module);
            return;
        }

		g_IDEImageSelectDialog.SetBasePath(ui_manager.texture_path);
		var path = g_IDEImageSelectDialog.ShowSelect();
		if (path == null) return;
		this.ImagePathSelectCallback("show_up", this.HandleShowUpFOCUSOUT, null, path, true);
	}
	
	public fun HandleShowDisabledFOCUSOUT(ALittle.UIEvent event)
	{
		if (event.target._user_data != null)
		{
			if (event.target._user_data == event.target.text) return;
			event.target._user_data = event.target.text;
		}
		this.RemoverToNilShowSetForImage("show_disabled", this._show_disabled.text, this._show_disabled_grid9.selected, false);
	}
	public async fun HandleShowDisabledSelect(ALittle.UIEvent event)
	{
        var ui_manager = g_IDEProject.GetUIManager(this._tree_logic.user_info.module);
        if (ui_manager == null)
        {
            g_AUITool.ShowNotice("错误", "模块不存在:"..this._tree_logic.user_info.module);
            return;
        }

		g_IDEImageSelectDialog.SetBasePath(ui_manager.texture_path);
		var path = g_IDEImageSelectDialog.ShowSelect();
		if (path == null) return;
		this.ImagePathSelectCallback("show_disabled", this.HandleShowDisabledFOCUSOUT, null, path, true);
	}
	
	public fun HandleShowTextFOCUSOUT(ALittle.UIEvent event)
	{
		g_IDEAttrTextDialog.ShowDialog(this, "show_text", false);
	}
	public fun HandleShowTextClear(ALittle.UIEvent event)
	{
		this.RemoverToNilShowSet("show_text", "", true);
	}
	
	public fun HandleShowDisabledTextFOCUSOUT(ALittle.UIEvent event)
	{
		g_IDEAttrTextDialog.ShowDialog(this, "show_disabled_text", false);
	}
	public fun HandleShowDisabledTextClear(ALittle.UIEvent event)
	{
		this.RemoverToNilShowSet("show_disabled_text", "", true);
	}
	public fun HandleHandFileSelectSELECT_CHANGE(ALittle.UIEvent event)
	{
		this.BoolSelectChange("file_select", false, g_IDEEnum.yn_type);
	}
}