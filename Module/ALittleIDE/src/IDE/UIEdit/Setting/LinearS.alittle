
namespace ALittleIDE;

public class LinearS : DisplayLayoutS
{
	public ctor(IDEUITreeUserInfo user_info, IDEUITabChild tab_child, IDEUITreeLogic tree_logic)
	{
		this._layer_name = "ide_setting_linear";
	}
	
	public fun LoadNatureBase()
	{
		DisplayLayoutS.LoadNatureBase(this);
	
		var list = g_IDEEnum.hv_type;
		this.LoadTypeSelectData("type", list);
		this.LoadBoolData("size_fixed", true, g_IDEEnum.yn_type);
		this.LoadValueData("gap");
	}
	
	public fun HandleLinearTypeSELECT_CHANGE(ALittle.UIEvent event)
	{
		var list = g_IDEEnum.hv_rtype;
		this.TypeSelectChange("type", cast<Map<string, any>>(list), true);
	}

	public fun HandleLinearSizeFixedSELECT_CHANGE(ALittle.UIEvent event)
	{
		var list = g_IDEEnum.yn_rtype;
		this.TypeSelectChange("size_fixed", cast<Map<string, any>>(list), true);
	}
	
	public fun HandleLinearGapFOCUSOUT(ALittle.UIEvent event)
	{
		this.ValueNumInputChange("gap", false);
	}
}