
namespace ALittleIDE;

public class IDEAttrControlDialog
{
	private ALittle.Dialog _dialog;
    private ALittle.DisplayLayout _attr_container;

	private fun CreateDialog()
	{
        this._dialog = g_Control.CreateControl{ALittle.Dialog}("ide_control_attr_dialog", this);
        g_DialogLayer.AddChild(this._dialog);
        this._dialog.visible = false;
        this._dialog.close_callback = bind(this.HandleClose, this);
	}
    public get attr_container() : ALittle.DisplayLayout
    {
		if (this._attr_container == null) this.CreateDialog();
        return this._attr_container;
    }

    private fun HandleClose() : bool
    {
        g_IDEAttrEventDialog.HideDialog();
        return true;
    }
	
	////////////////////////////////////////////////////////////////////////////////////////
	public fun SetTitle(string title)
	{
		if (this._dialog == null) this.CreateDialog();
		this._dialog.title = title;
    }

	public fun ShowDialog(ALittle.DisplayObject target)
	{
		if (this._dialog == null) this.CreateDialog();
		this._dialog.visible = true;

        var x, y = target.LocalToGlobal();
        this._dialog.x = x + target.width + 20;
		this._dialog.y = A_UISystem.mouse_y - (this._dialog.height - target.height) / 2;
		if (this._dialog.y < 0) this._dialog.y = 0;

		if (this._dialog.x + this._dialog.width > A_UISystem.view_width)
			this._dialog.x = A_UISystem.view_width - this._dialog.width;
		if (this._dialog.y + this._dialog.height > A_UISystem.view_height)
    		this._dialog.y = A_UISystem.view_height - this._dialog.height;
	}
	public fun HideDialog()
	{
		if (this._dialog == null) return;
		this._dialog.visible = false;
        g_IDEAttrEventDialog.HideDialog();
	}
    public fun IsShow() : bool
    {
		if (this._dialog == null) return false;
		return this._dialog.visible;
    }
}

protected var g_IDEAttrControlDialog = new IDEAttrControlDialog();