
namespace ALittleIDE;

public class IDEUIProjectList : ALittle.DisplayLayout
{
	private ALittle.ScrollScreen _project_scroll_screen;	// 项目滚动屏
	private ALittle.DisplayObject _project_search_key;		// 搜索输入框

	// 处理项目搜索
	private fun HandleProjectSearchClick(ALittle.UIEvent event)
	{
		// 移除所有子控件
		this._project_scroll_screen.RemoveAllChild();
		// 获取搜索的内容
		var key = this._project_search_key.text;
		// 获取项目列表
		var project_map = g_IDEConfig.GetConfig("project_map", new Map<string, string>());
		// 遍历项目
		for (var k, v in project_map)
		{
			if (key == "" || ALittle.String_Find(v, key) != null)
			{
				var item = g_Control.CreateControl{ALittle.DisplayObject}("aui_menu_item_button");
				item.text = v;
				item.drag_trans_target = this._project_scroll_screen;
				item.AddEventListener(this, this.HandleProjectItemRightClick);
				this._project_scroll_screen.AddChild(item);
			}
		}
	}

	// 处理项目搜索，右键菜单
	private fun HandleProjectItemRightClick(ALittle.UIRButtonDownEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("打开", bind(this.HandleRightProjectOpen, this, event.target));
		menu.AddItem("关闭", bind(this.HandleRightProjectClose, this, event.target));
		menu.AddItem("移除", bind(this.HandleRightProjectRemove, this, event.target));
		menu.Show();
	}
	
	private async fun HandleRightProjectOpen(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (!g_IDECenter.center.content_edit.IsSaveAll())
		{
			var result = g_AUITool.SaveNotice("提示", "是否保存当前项目?");
			if (result == AUIPlugin.AUIToolOption.YES)
				g_IDECenter.center.content_edit.SaveAllTab();
		}
		var error = g_IDEProject.OpenProject(project_name);
		if (error != null) g_AUITool.ShowNotice("错误", error);
	}
	
	public fun HandleRightProjectRemove(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (g_IDEProject.project != null && g_IDEProject.project.name == project_name)
		{
			g_AUITool.ShowNotice("提示", "当前项目正在编辑，请先关闭");
			return;
		}
		this._project_scroll_screen.RemoveChild(target);
		// 移除项目
		g_IDEProject.RemoveProject(project_name);
	}
	
	public async fun HandleRightProjectClose(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (g_IDEProject.project == null || g_IDEProject.project.name != project_name)
			return;
        
		// 如果都保存了，就直接关闭项目
		if (!g_IDECenter.center.content_edit.IsSaveAll())
		{
			var result = g_AUITool.SaveNotice("提示", "是否保存当前项目?");
			if (result == AUIPlugin.AUIToolOption.YES)
				g_IDECenter.center.content_edit.SaveAllTab();
		}
		g_IDEProject.CloseProject();
	}
}