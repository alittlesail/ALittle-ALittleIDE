
namespace ALittleIDE;

protected class IDEProjectFindFileDialog
{
	private ALittle.DisplayObject _project_find_file_dialog;	// 项目设置对话框
    private ALittle.ScrollScreen _file_scroll_screen;		// 文件滚动屏
    private ALittle.ImageInput _find_input;

	public fun ShowFindFile()
	{
		if (g_IDEProject.project == null)
		{
			g_AUITool.ShowNotice("错误", "当前没有打开的项目");
			return;
		}
        
        // 创建对话框
		if (this._project_find_file_dialog == null)
		{
			this._project_find_file_dialog = g_Control.CreateControl{ALittle.DisplayObject}("ide_find_file_dialog", this);
            this._project_find_file_dialog.x = (A_UISystem.view_width - this._project_find_file_dialog.width) / 2;
            this._project_find_file_dialog.y = (A_UISystem.view_height - this._project_find_file_dialog.height) / 2;
			g_DialogLayer.AddChild(this._project_find_file_dialog);
		}
        
        // 显示对话框
		this._project_find_file_dialog.visible = true;
        this._project_find_file_dialog.MoveToTop();
        this._find_input.DelayFocus();
	}

    public fun HideDialog()
    {
        if (this._project_find_file_dialog == null) return;
        this._project_find_file_dialog.visible = false;
    }

    public fun IsShow() : bool
    {
        if (this._project_find_file_dialog == null) return false;
        return this._project_find_file_dialog.visible;
    }

    private fun HandleEnterKeyClick(ALittle.UIEnterKeyEvent event)
    {
        this.HandleSearchClick(null);
    }

    private async fun HandleSearchClick(ALittle.UIClickEvent event)
    {
        this._file_scroll_screen.RemoveAllChild();
        var text = ALittle.String_Trim(this._find_input.text);
        if (text == null) return;
        if (g_IDEProject.project == null) return;
        if (g_IDEProject.project.code == null) return;
        var file_list = g_IDEProject.project.code.FindFile(text);
        for (var index, file_path in file_list)
        {
            var item = g_Control.CreateControl{ALittle.DisplayObject}("scroll_screen_item_checkbutton");
            // 添加点击事件
            item.AddEventListener(this, this.HandleItemClick);
            item.text = file_path;
            item._user_data = file_path;
            this._file_scroll_screen.AddChild(item);
        }
    }

    private fun HandleItemClick(ALittle.UIClickEvent event)
    {
		var code_child = g_IDECenter.center.code_list.OpenByFullPath(event.target._user_data, 1, 1, 1, 1);
        if (code_child == null) return;
        code_child.FindText(this._find_input.text);
    }
}

protected var g_IDEProjectFindFileDialog = new IDEProjectFindFileDialog();