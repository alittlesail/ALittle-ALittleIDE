
namespace ALittleIDE;

public class IDEProjectOpenDialog
{
	private ALittle.DisplayObject _project_open_dialog;		// 打开项目对话框
	private ALittle.ImageInput _project_open_name;			// 项目名称
	private ALittle.DropDown _project_dropdown;				// 项目列表

	// 处理打开项目操作
	public fun ShowOpenProject()
	{
		// 创建对话框
		if (this._project_open_dialog == null)
		{
			this._project_open_dialog = g_Control.CreateControl{ALittle.DisplayObject}("ide_open_project_dialog", this);
			A_LayerManager.AddToModal(this._project_open_dialog);
		}
		// 初始化项目名输入框
		this._project_open_name.text = "";
		// 显示对话框
		this._project_open_dialog.visible = true;
		// 显示项目列表
		var module_list = new List<string>();
		var file_map = ALittle.File_GetNameListByDir(g_ModuleBasePath.."..");
		for (var name, info in file_map)
		{
			if (info.directory)
				ALittle.List_Push(module_list, name);
        }
		this._project_dropdown.data_list = module_list;
		this._project_dropdown.text = "";
		// 把输入框设置为焦点
		A_UISystem.focus = this._project_open_name.show_input;
	}
	// 处理选中
	public fun HandleOpenProjectSelect(ALittle.UISelectChangedEvent event)
	{
        this._project_open_name.text = event.target.text;
		event.target.text = "";
    }
	// 处理打开项目-取消
	public fun HandleOpenProjectCancel(ALittle.UIEvent event)
	{
		this._project_open_dialog.visible = false;
	}
	// 处理打开项目-确定
	public async fun HandleOpenProjectConfirm(ALittle.UIEvent event)
	{
		// 关闭对话框
		this._project_open_dialog.visible = false;
		// 获取项目名字
		var name = this._project_open_name.text;
	
		// 检查当前是否有项目并且是否保存
		if (!g_IDECenter.center.content_edit.IsSaveAll())
		{
			// 如果没有保存，那么走保存提示流程
			var result = g_AUITool.SaveNotice("提示", "是否保存当前项目?");
			if (result == AUIPlugin.AUIToolOption.YES)
				g_IDECenter.center.content_edit.SaveAllTab();
		}
		
		var error = g_IDEProject.OpenProject(name);
		if (error != null)
		{
			g_AUITool.ShowNotice("错误", error);
			return;
		}
	}
}

protected var g_IDEProjectOpenDialog = new IDEProjectOpenDialog();